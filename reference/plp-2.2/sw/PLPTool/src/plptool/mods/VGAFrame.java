/*
    Copyright 2010 David Fritz, Brian Gordon, Wira Mulia

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

 */

package plptool.mods;

import plptool.Msg;

import java.awt.Dimension;
import java.awt.Canvas;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import javax.swing.JPanel;

/**
 *
 * @author wira
 */
public class VGAFrame extends javax.swing.JInternalFrame {

    private BufferedImage I = new BufferedImage(640, 480, BufferedImage.TYPE_INT_RGB);
    //private JPanel container;
    private VGACanvas canvas;

    /** Creates new form VGAFrame */
    public VGAFrame() {
        initComponents();
        canvas = new VGACanvas(I);
        canvas.setSize(new Dimension(640, 480));
        container.setSize(new Dimension(640, 480));
        this.add(container);
        container.add("Canvas", canvas);
        this.setSize(new Dimension(660, 500));
        this.pack();
    }

    public void draw(int[][] image) {
        if(image.length == 0 || image.length > 640)
            return;
        if(image[0].length == 0 || image[0].length > 480)
            return;

        Msg.D("We're actually drawing!", 4, this);

        for(int x = 0; x < 640; x++)
            for(int y = 0; y < 480; y++)
                I.setRGB(x, y, image[x][y]);

        canvas.setImage(I);
        canvas.paint(canvas.getGraphics());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        container = new javax.swing.JPanel();

        setResizable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(plptool.gui.PLPToolApp.class).getContext().getResourceMap(VGAFrame.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setMinimumSize(new java.awt.Dimension(640, 480));
        setName("Form"); // NOI18N
        setPreferredSize(new java.awt.Dimension(640, 480));

        container.setName("container"); // NOI18N

        javax.swing.GroupLayout containerLayout = new javax.swing.GroupLayout(container);
        container.setLayout(containerLayout);
        containerLayout.setHorizontalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 634, Short.MAX_VALUE)
        );
        containerLayout.setVerticalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 454, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public String toString() {
        return "VGAFrame";
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel container;
    // End of variables declaration//GEN-END:variables

}

class VGACanvas extends Canvas {

    private BufferedImage I;

    public VGACanvas(BufferedImage I) {
        this.I = I;
    }

    public void setImage(BufferedImage I) {
        this.I = I;
    }

    @Override
    public void paint(Graphics g) {
        g.drawImage(I, 0, 0, Color.BLACK, null);
    }
}

