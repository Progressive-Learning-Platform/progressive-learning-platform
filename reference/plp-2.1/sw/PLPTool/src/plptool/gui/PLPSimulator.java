/*
    Copyright 2010 David Fritz, Brian Gordon, Wira Mulia

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

 */

/*
 * PLP Simulator GUI
 */

package plptool.gui;

import plptool.*;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import java.awt.Color;

/**
 * The application's main frame.
 */
public class PLPSimulator extends FrameView {

    static final int MAX_STEPS = 60000;
    PLPBackend backend;

    public PLPSimulator(SingleFrameApplication app, PLPBackend backend) {
        super(app);

        this.backend = backend;

        initComponents();
        PLPMsg.M("PLPTool Simulator GUI Loaded\n");
        this.getFrame().setTitle("PLP Simulator");
    }

     public void plpMsgRouteBack() {
        PLPMsg.output = null;
    }

    public void summonFrame(javax.swing.JInternalFrame frame) {
        simDesktop.add(frame);
        frame.setVisible(true);
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("uncheck ed")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SimPane = new javax.swing.JPanel();
        simControls = new javax.swing.JPanel();
        btnStep = new javax.swing.JButton();
        lblControl = new javax.swing.JLabel();
        tglRun = new javax.swing.JToggleButton();
        txtSteps = new javax.swing.JTextField();
        btnReset = new javax.swing.JButton();
        tglIODisplay = new javax.swing.JToggleButton();
        btnMem = new javax.swing.JToggleButton();
        lblFlags = new javax.swing.JLabel();
        txtFlags = new javax.swing.JTextField();
        btnOpts = new javax.swing.JButton();
        simDesktop = new javax.swing.JDesktopPane();

        SimPane.setEnabled(false);
        SimPane.setName("EmulatorTab"); // NOI18N

        simControls.setName("simControls"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(plptool.gui.PLPToolApp.class).getContext().getResourceMap(PLPSimulator.class);
        btnStep.setText(resourceMap.getString("btnStep.text")); // NOI18N
        btnStep.setName("btnStep"); // NOI18N
        btnStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStepActionPerformed(evt);
            }
        });

        lblControl.setText(resourceMap.getString("lblControl.text")); // NOI18N
        lblControl.setName("lblControl"); // NOI18N

        tglRun.setText(resourceMap.getString("tglRun.text")); // NOI18N
        tglRun.setName("tglRun"); // NOI18N
        tglRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglRunActionPerformed(evt);
            }
        });

        txtSteps.setText(resourceMap.getString("txtSteps.text")); // NOI18N
        txtSteps.setName("txtSteps"); // NOI18N

        btnReset.setText(resourceMap.getString("btnReset.text")); // NOI18N
        btnReset.setName("btnReset"); // NOI18N
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        tglIODisplay.setText(resourceMap.getString("tglIODisplay.text")); // NOI18N
        tglIODisplay.setName("tglIODisplay"); // NOI18N
        tglIODisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglIODisplayActionPerformed(evt);
            }
        });

        btnMem.setText(resourceMap.getString("btnMem.text")); // NOI18N
        btnMem.setName("btnMem"); // NOI18N

        lblFlags.setText(resourceMap.getString("lblFlags.text")); // NOI18N
        lblFlags.setName("lblFlags"); // NOI18N

        txtFlags.setText(resourceMap.getString("txtFlags.text")); // NOI18N
        txtFlags.setName("txtFlags"); // NOI18N

        btnOpts.setText(resourceMap.getString("btnOpts.text")); // NOI18N
        btnOpts.setName("btnOpts"); // NOI18N
        btnOpts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOptsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout simControlsLayout = new javax.swing.GroupLayout(simControls);
        simControls.setLayout(simControlsLayout);
        simControlsLayout.setHorizontalGroup(
            simControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(simControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblControl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSteps, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnStep)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tglRun)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReset)
                .addGap(18, 18, 18)
                .addComponent(tglIODisplay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMem, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblFlags)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFlags, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnOpts)
                .addContainerGap(142, Short.MAX_VALUE))
        );
        simControlsLayout.setVerticalGroup(
            simControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(simControlsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(simControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblControl)
                    .addComponent(tglRun)
                    .addComponent(btnStep)
                    .addComponent(txtSteps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset)
                    .addComponent(tglIODisplay)
                    .addComponent(btnMem)
                    .addComponent(lblFlags)
                    .addComponent(txtFlags, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOpts))
                .addContainerGap())
        );

        simDesktop.setBackground(resourceMap.getColor("simDesktop.background")); // NOI18N
        simDesktop.setName("simDesktop"); // NOI18N

        javax.swing.GroupLayout SimPaneLayout = new javax.swing.GroupLayout(SimPane);
        SimPane.setLayout(SimPaneLayout);
        SimPaneLayout.setHorizontalGroup(
            SimPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(simControls, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(simDesktop, javax.swing.GroupLayout.DEFAULT_SIZE, 875, Short.MAX_VALUE)
        );
        SimPaneLayout.setVerticalGroup(
            SimPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SimPaneLayout.createSequentialGroup()
                .addComponent(simDesktop, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(simControls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setComponent(SimPane);
    }// </editor-fold>//GEN-END:initComponents

    private void btnOptsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOptsActionPerformed
        if(opts == null)
            opts = new PLPOptions();
        opts.setVisible(true);
}//GEN-LAST:event_btnOptsActionPerformed

    private void tglIODisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglIODisplayActionPerformed
        if(tglIODisplay.isSelected()) {
            if(backend.g_ioreg == null) {
                backend.g_ioreg = new PLPIORegistry(backend);
                simDesktop.add(backend.g_ioreg);
            }
            backend.g_ioreg.setVisible(true);
        } else
            backend.g_ioreg.setVisible(false);
}//GEN-LAST:event_tglIODisplayActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        if(simRunner != null)
            simRunner.stepCount = 0;
        backend.sim.reset();
        backend.g_sim.updateComponents();
        backend.g_err.clearError();
}//GEN-LAST:event_btnResetActionPerformed

    private void tglRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglRunActionPerformed
        if(tglRun.isSelected()) {
            simRunner = new PLPSimRunner(backend);
            simRunner.start();
        } else {
            if(simRunner != null) {
                try {
                    simRunner.stepCount = 0;
                } catch(Exception e) {}
            }
        }
}//GEN-LAST:event_tglRunActionPerformed

    private void btnStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStepActionPerformed
        if(simRunner != null)
            simRunner.stepCount = 0;
        backend.g_err.clearError();

        try {
            int steps = Integer.parseInt(txtSteps.getText());
            if(steps <= MAX_STEPS && steps > 0) {
                for(int i = 0; i < steps; i++)
                    backend.sim.step();
                backend.g_sim.updateComponents();
            } else {
                txtSteps.setText("1");
            }
        } catch(Exception e) {
            txtSteps.setText("1");
        }

        if(PLPMsg.lastError != 0)
            backend.g_err.setError(PLPMsg.lastError);
}//GEN-LAST:event_btnStepActionPerformed

    public void unselectTglRun() {
        tglRun.setSelected(false);
    }

    public void destroySimulation() {
        if(backend.sim != null) {
            backend.g_sim.dispose();
            backend.g_err.dispose();
            backend.ioreg.removeAllModules(backend.sim);
        }

        if(simRunner != null) {
            simRunner.stepCount = 0;
        }

        simDesktop.removeAll();
        if(backend.g_ioreg != null)
            backend.g_ioreg.dispose();
        backend.g_ioreg = null;
        tglIODisplay.setSelected(false);
    }

    public javax.swing.JDesktopPane getSimDesktop() {
        return simDesktop;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel SimPane;
    private javax.swing.JToggleButton btnMem;
    private javax.swing.JButton btnOpts;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnStep;
    private javax.swing.JLabel lblControl;
    private javax.swing.JLabel lblFlags;
    private javax.swing.JPanel simControls;
    private javax.swing.JDesktopPane simDesktop;
    private javax.swing.JToggleButton tglIODisplay;
    private javax.swing.JToggleButton tglRun;
    private javax.swing.JTextField txtFlags;
    private javax.swing.JTextField txtSteps;
    // End of variables declaration//GEN-END:variables

    private JDialog             aboutBox;
    private PLPSimRunner        simRunner;
    private PLPOptions          opts;

}
