# could add to CFLAGS to turn on warnings if you are using gcc
WARNS=-Wall

# change path if not running test from installed directory location
INCS=-I../../pli_incs
# you must use exactly these flags for OSX
CFLAGS= -fPIC  -Wall $(INCS) -dynamic -fno-common 
LFLAGS= -flat_namespace -bundle -undefined suppress

# change to your compiler
# CC=gcc

async.o:	async.c 
	$(CC) $(CFLAGS) -c async.c
 
vhello1.o:	vhello1.c 
	$(CC) $(CFLAGS) -c vhello1.c

vhello2.o:	vhello2.c 
	$(CC) $(CFLAGS) -c vhello2.c

vhelbad.o:	vhelbad.c 
	$(CC) $(CFLAGS) -c vhelbad.c

findcaus.o:	findcaus.c 
	$(CC) $(CFLAGS) -c findcaus.c

vacbtst.o:	vacbtst.c 
	$(CC) $(CFLAGS) -c vacbtst.c

vprtchg.o:	vprtchg.c 
	$(CC) $(CFLAGS) -c vprtchg.c

vprtchg2.o:	vprtchg2.c 
	$(CC) $(CFLAGS) -c vprtchg2.c

vprtchg3.o:	vprtchg3.c 
	$(CC) $(CFLAGS) -c vprtchg3.c

vprtdels.o:	vprtdels.c 
	$(CC) $(CFLAGS) -c vprtdels.c

vprtdel2.o:	vprtdel2.c 
	$(CC) $(CFLAGS) -c vprtdel2.c

vsetdels.o:	vsetdels.c 
	$(CC) $(CFLAGS) -c vsetdels.c

vsetval1.o:	vsetval1.c 
	$(CC) $(CFLAGS) -c vsetval1.c

vsetval2.o:	vsetval2.c 
	$(CC) $(CFLAGS) -c vsetval2.c

vtimcbs.o:	vtimcbs.c 
	$(CC) $(CFLAGS) -c vtimcbs.c

vfopen1.o:	vfopen1.c 
	$(CC) $(CFLAGS) -c vfopen1.c

vfopen2.o:	vfopen2.c 
	$(CC) $(CFLAGS) -c vfopen2.c

vconta1.o:	vconta1.c 
	$(CC) $(CFLAGS) -c vconta1.c

vchkprt1.o:	vchkprt1.c 
	$(CC) $(CFLAGS) -c vchkprt1.c

vdrvld1.o:	vdrvld1.c 
	$(CC) $(CFLAGS) -c vdrvld1.c

vdrvld2.o:	vdrvld2.c 
	$(CC) $(CFLAGS) -c vdrvld2.c

dfpsetd.o:	dfpsetd.c
	$(CC) $(CFLAGS) -c dfpsetd.c

# make rules for dynamic libaries
async.dylib:	async.o
	$(CC) $(LFLAGS) async.o -o async.dylib

vhello1.dylib:	vhello1.o
	$(CC) $(LFLAGS) vhello1.o -o vhello1.dylib

vhello2.dylib:	vhello2.o
	$(CC) $(LFLAGS) vhello2.o -o vhello2.dylib

vhelbad.dylib:	vhelbad.o
	$(CC) $(LFLAGS) vhelbad.o -o vhelbad.dylib

findcaus.dylib:	findcaus.o
	$(CC) $(LFLAGS) findcaus.o -o findcaus.dylib

vacbtst.dylib:	vacbtst.o
	$(CC) $(LFLAGS) vacbtst.o -o vacbtst.dylib

vprtchg.dylib:	vprtchg.o
	$(CC) $(LFLAGS) vprtchg.o -o vprtchg.dylib

vprtchg2.dylib:	vprtchg2.o
	$(CC) $(LFLAGS) vprtchg2.o -o vprtchg2.dylib

vprtchg3.dylib:	vprtchg3.o
	$(CC) $(LFLAGS) vprtchg3.o -o vprtchg3.dylib

vprtdels.dylib:	vprtdels.o
	$(CC) $(LFLAGS) vprtdels.o -o vprtdels.dylib

vprtdel2.dylib:	vprtdel2.o
	$(CC) $(LFLAGS) vprtdel2.o -o vprtdel2.dylib

vsetdels.dylib:	vsetdels.o
	$(CC) $(LFLAGS) vsetdels.o -o vsetdels.dylib

vsetval1.dylib:	vsetval1.o
	$(CC) $(LFLAGS) vsetval1.o -o vsetval1.dylib

vsetval2.dylib:	vsetval2.o
	$(CC) $(LFLAGS) vsetval2.o -o vsetval2.dylib

vtimcbs.dylib:	vtimcbs.o
	$(CC) $(LFLAGS) vtimcbs.o -o vtimcbs.dylib

vfopen1.dylib:	vfopen1.o
	$(CC) $(LFLAGS) vfopen1.o -o vfopen1.dylib

vfopen2.dylib:	vfopen2.o
	$(CC) $(LFLAGS) vfopen2.o -o vfopen2.dylib

vconta1.dylib:	vconta1.o
	$(CC) $(LFLAGS) vconta1.o -o vconta1.dylib

vchkprt1.dylib:	vchkprt1.o
	$(CC) $(LFLAGS) vchkprt1.o -o vchkprt1.dylib

vdrvld1.dylib:	vdrvld1.o
	$(CC) $(LFLAGS) vdrvld1.o -o vdrvld1.dylib

vdrvld2.dylib:	vdrvld2.o
	$(CC) $(LFLAGS) vdrvld2.o -o vdrvld2.dylib

dfpsetd.dylib:	dfpsetd.o
	$(CC) $(LFLAGS) dfpsetd.o -o dfpsetd.dylib
