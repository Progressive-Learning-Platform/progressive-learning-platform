/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UARTFrame.java
 *
 * Created on Feb 5, 2011, 5:57:54 PM
 */

package plptool.mods;

/**
 *
 * @author fritz
 */
public class UARTFrame extends javax.swing.JFrame {
    UART u;
    
    /** Creates new form UARTFrame */
    public UARTFrame() {
        this.setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage(this.getClass().getResource("resources/toolbar_sim_uart.png")));
        initComponents();
        cmbFormat.removeAllItems();
        cmbFormat.addItem("ASCII String");
        cmbFormat.addItem("1-byte raw");
        cmbFormat.addItem("Space-delimited raw");
        
    }

    public void setUART(UART f) {
        u = f;
    }
    public void addText(long d) {
        txtUART.append(String.format("%c",(char)d));
        txtUART.setCaretPosition(txtUART.getText().length() - 1);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtUART = new javax.swing.JTextArea();
        btnClear = new javax.swing.JButton();
        lblRawByte = new javax.swing.JLabel();
        txtInput = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();
        cmbFormat = new javax.swing.JComboBox<String>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(plptool.gui.PLPToolApp.class).getContext().getResourceMap(UARTFrame.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);

        jScrollPane1.setBackground(resourceMap.getColor("jScrollPane1.background")); // NOI18N
        jScrollPane1.setForeground(resourceMap.getColor("jScrollPane1.foreground")); // NOI18N
        jScrollPane1.setName("jScrollPane1"); // NOI18N

        txtUART.setBackground(resourceMap.getColor("txtUART.background")); // NOI18N
        txtUART.setColumns(20);
        txtUART.setEditable(false);
        txtUART.setFont(resourceMap.getFont("txtUART.font")); // NOI18N
        txtUART.setForeground(resourceMap.getColor("txtUART.foreground")); // NOI18N
        txtUART.setLineWrap(true);
        txtUART.setRows(5);
        txtUART.setDisabledTextColor(resourceMap.getColor("txtUART.disabledTextColor")); // NOI18N
        txtUART.setName("txtUART"); // NOI18N
        txtUART.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUARTKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtUART);

        btnClear.setText(resourceMap.getString("btnClear.text")); // NOI18N
        btnClear.setName("btnClear"); // NOI18N
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        lblRawByte.setText(resourceMap.getString("lblRawByte.text")); // NOI18N
        lblRawByte.setName("lblRawByte"); // NOI18N

        txtInput.setText(resourceMap.getString("txtInput.text")); // NOI18N
        txtInput.setName("txtInput"); // NOI18N
        txtInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtInputKeyPressed(evt);
            }
        });

        btnSend.setText(resourceMap.getString("btnSend.text")); // NOI18N
        btnSend.setName("btnSend"); // NOI18N
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        cmbFormat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbFormat.setName("cmbFormat"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblRawByte)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtInput, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSend)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear)
                    .addComponent(lblRawByte)
                    .addComponent(btnSend)
                    .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUARTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUARTKeyTyped
         u.receivedData(evt.getKeyChar());
    }//GEN-LAST:event_txtUARTKeyTyped

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtUART.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        int dataout;
        byte[] chars;
        
        switch(cmbFormat.getSelectedIndex()) {
            case 0:
                chars =  txtInput.getText().getBytes();
                for(int i = 0; i < chars.length; i++)
                    u.receivedData((char) chars[i]);

                break;

            case 1:
                dataout = plptool.PLPToolbox.parseNumInt(txtInput.getText());

                if(dataout < 0 || dataout > 255) {
                    return;
                }

                u.receivedData((char) dataout);
                break;

            case 2:
                String tokens[] = txtInput.getText().split("\\s+");


                for(int i = 0; i < tokens.length; i++) {
                    dataout = plptool.PLPToolbox.parseNumInt(tokens[i]);

                    if(dataout < 0 || dataout > 255) {
                        return;
                    }

                     u.receivedData((char) dataout);
                }

                break;

            default:
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void txtInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInputKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER) {
            btnSendActionPerformed(null);
            //u.receivedData((char) plptool.PLPToolbox.parseNumInt(txtInput.getText()));
        }
    }//GEN-LAST:event_txtInputKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnSend;
    private javax.swing.JComboBox<String> cmbFormat;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblRawByte;
    private javax.swing.JTextField txtInput;
    private javax.swing.JTextArea txtUART;
    // End of variables declaration//GEN-END:variables

}
