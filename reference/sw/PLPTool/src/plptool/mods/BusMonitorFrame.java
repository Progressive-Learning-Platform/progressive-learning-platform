/*
    Copyright 2011 David Fritz, Brian Gordon, Wira Mulia

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

 */

package plptool.mods;

import plptimingdiagram.TimingDiagram;
import plptimingdiagram.draw.DiagramCanvas;
import plptimingdiagram.draw.XAxis;
import plptool.PLPToolbox;

import javax.swing.JCheckBoxMenuItem;

/**
 *
 * @author wira
 */
public class BusMonitorFrame extends javax.swing.JFrame {

    private BusMonitor busMon;
    private XAxis axis;
    private DiagramCanvas canvas;

    private final JCheckBoxMenuItem menu = null;

    /** Creates new form BusMonitorFrame */
    public BusMonitorFrame(BusMonitor busMon, final JCheckBoxMenuItem menu) {
        initComponents();
        this.setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage(this.getClass().getResource("resources/timingdiagram.png")));
        this.busMon = busMon;
        this.axis = new XAxis(0, 100000, 10);
        canvas = new DiagramCanvas(busMon.getTimingDiagram(), axis);
        canvas.setSize(canvasContainer.getWidth(), canvasContainer.getHeight());
        canvasContainer.add(canvas);
        canvas.setHoverCursorEnable(false);

        addWindowListener(new java.awt.event.WindowListener() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent evt) {
                setVisible(false);
                menu.setSelected(false);
            }

            @Override public void windowOpened(java.awt.event.WindowEvent evt) { }
            @Override public void windowDeactivated(java.awt.event.WindowEvent evt) { }
            @Override public void windowActivated(java.awt.event.WindowEvent evt) { }
            @Override public void windowDeiconified(java.awt.event.WindowEvent evt) { }
            @Override public void windowIconified(java.awt.event.WindowEvent evt) { }
            @Override public void windowClosed(java.awt.event.WindowEvent evt) { }
        });
    }

    private void updateRangeFields() {
        txtStart.setText(""+(int)axis.getDomainStart());
        txtEnd.setText(""+(int)axis.getDomainEnd());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        canvasContainer = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtStart = new javax.swing.JTextField();
        txtEnd = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnSimEndCopy = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtLocation = new javax.swing.JTextField();
        btnAddLocation = new javax.swing.JButton();
        btnZoomIn = new javax.swing.JButton();
        btnZoomOut = new javax.swing.JButton();
        btnCursorToStart = new javax.swing.JButton();
        btnCursorToEnd = new javax.swing.JButton();
        btnShiftLeft = new javax.swing.JButton();
        btnShiftRight = new javax.swing.JButton();
        chkDeltaCursor = new javax.swing.JCheckBox();
        btnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(plptool.gui.PLPToolApp.class).getContext().getResourceMap(BusMonitorFrame.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        canvasContainer.setName("canvasContainer"); // NOI18N

        javax.swing.GroupLayout canvasContainerLayout = new javax.swing.GroupLayout(canvasContainer);
        canvasContainer.setLayout(canvasContainerLayout);
        canvasContainerLayout.setHorizontalGroup(
            canvasContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 638, Short.MAX_VALUE)
        );
        canvasContainerLayout.setVerticalGroup(
            canvasContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 295, Short.MAX_VALUE)
        );

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        txtStart.setText(resourceMap.getString("txtStart.text")); // NOI18N
        txtStart.setName("txtStart"); // NOI18N

        txtEnd.setText(resourceMap.getString("txtEnd.text")); // NOI18N
        txtEnd.setMinimumSize(new java.awt.Dimension(12, 20));
        txtEnd.setName("txtEnd"); // NOI18N
        txtEnd.setPreferredSize(new java.awt.Dimension(12, 20));

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        btnSimEndCopy.setText(resourceMap.getString("btnSimEndCopy.text")); // NOI18N
        btnSimEndCopy.setName("btnSimEndCopy"); // NOI18N
        btnSimEndCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimEndCopyActionPerformed(evt);
            }
        });

        btnUpdate.setText(resourceMap.getString("btnUpdate.text")); // NOI18N
        btnUpdate.setName("btnUpdate"); // NOI18N
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        txtLocation.setText(resourceMap.getString("txtLocation.text")); // NOI18N
        txtLocation.setName("txtLocation"); // NOI18N
        txtLocation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLocationKeyPressed(evt);
            }
        });

        btnAddLocation.setText(resourceMap.getString("btnAddLocation.text")); // NOI18N
        btnAddLocation.setName("btnAddLocation"); // NOI18N
        btnAddLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddLocationActionPerformed(evt);
            }
        });

        btnZoomIn.setText(resourceMap.getString("btnZoomIn.text")); // NOI18N
        btnZoomIn.setName("btnZoomIn"); // NOI18N
        btnZoomIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZoomInActionPerformed(evt);
            }
        });

        btnZoomOut.setText(resourceMap.getString("btnZoomOut.text")); // NOI18N
        btnZoomOut.setName("btnZoomOut"); // NOI18N
        btnZoomOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZoomOutActionPerformed(evt);
            }
        });

        btnCursorToStart.setText(resourceMap.getString("btnCursorToStart.text")); // NOI18N
        btnCursorToStart.setName("btnCursorToStart"); // NOI18N
        btnCursorToStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCursorToStartActionPerformed(evt);
            }
        });

        btnCursorToEnd.setText(resourceMap.getString("btnCursorToEnd.text")); // NOI18N
        btnCursorToEnd.setName("btnCursorToEnd"); // NOI18N
        btnCursorToEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCursorToEndActionPerformed(evt);
            }
        });

        btnShiftLeft.setText(resourceMap.getString("btnShiftLeft.text")); // NOI18N
        btnShiftLeft.setName("btnShiftLeft"); // NOI18N
        btnShiftLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShiftLeftActionPerformed(evt);
            }
        });

        btnShiftRight.setText(resourceMap.getString("btnShiftRight.text")); // NOI18N
        btnShiftRight.setName("btnShiftRight"); // NOI18N
        btnShiftRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShiftRightActionPerformed(evt);
            }
        });

        chkDeltaCursor.setText(resourceMap.getString("chkDeltaCursor.text")); // NOI18N
        chkDeltaCursor.setName("chkDeltaCursor"); // NOI18N
        chkDeltaCursor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDeltaCursorActionPerformed(evt);
            }
        });

        btnClear.setText(resourceMap.getString("btnClear.text")); // NOI18N
        btnClear.setName("btnClear"); // NOI18N
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txtStart, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCursorToStart, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCursorToEnd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSimEndCopy)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkDeltaCursor))
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddLocation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                        .addComponent(btnZoomIn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnZoomOut)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnShiftLeft)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnShiftRight)))
                .addContainerGap())
            .addComponent(canvasContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddLocation)
                    .addComponent(btnZoomIn)
                    .addComponent(btnZoomOut)
                    .addComponent(btnShiftLeft)
                    .addComponent(btnShiftRight)
                    .addComponent(btnClear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(canvasContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCursorToStart)
                    .addComponent(btnCursorToEnd)
                    .addComponent(txtEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSimEndCopy)
                    .addComponent(btnUpdate)
                    .addComponent(chkDeltaCursor))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimEndCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimEndCopyActionPerformed
        txtEnd.setText("" + busMon.getSimCore().getInstrCount());
    }//GEN-LAST:event_btnSimEndCopyActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        long start = PLPToolbox.parseNum(txtStart.getText());
        long end = PLPToolbox.parseNum(txtEnd.getText());

        if(end <= start)
            return;
        
        axis.setDomain(start, end);
        canvas.repaint();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnAddLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddLocationActionPerformed
        busMon.addAddressToMonitor(PLPToolbox.parseNum(txtLocation.getText()));
        canvas.repaint();
    }//GEN-LAST:event_btnAddLocationActionPerformed

    private void btnZoomInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZoomInActionPerformed
        canvas.doZoomInOnCursor(2.0);
        updateRangeFields();
    }//GEN-LAST:event_btnZoomInActionPerformed

    private void btnZoomOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZoomOutActionPerformed
        canvas.doZoomOutOnCursor(2.0);
        updateRangeFields();
    }//GEN-LAST:event_btnZoomOutActionPerformed

    private void btnCursorToStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCursorToStartActionPerformed
        double cur = canvas.getYCursorTime()+axis.getDomainStart();
        if(cur >= 0) {
            txtStart.setText(""+(int)cur);
        }
    }//GEN-LAST:event_btnCursorToStartActionPerformed

    private void btnCursorToEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCursorToEndActionPerformed
        double cur = canvas.getYCursorTime()+axis.getDomainStart();
        if(cur >= 0) {
            txtEnd.setText(""+(int)cur);
        }
    }//GEN-LAST:event_btnCursorToEndActionPerformed

    private void btnShiftLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShiftLeftActionPerformed
        canvas.doLeftShift(0.10);
        updateRangeFields();
    }//GEN-LAST:event_btnShiftLeftActionPerformed

    private void btnShiftRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShiftRightActionPerformed
        canvas.doRightShift(0.10);
        updateRangeFields();
    }//GEN-LAST:event_btnShiftRightActionPerformed

    private void chkDeltaCursorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDeltaCursorActionPerformed
        canvas.setHoverCursorEnable(chkDeltaCursor.isSelected());

        if(!chkDeltaCursor.isSelected()) {
            canvas.clearHoverCursor();
        }
    }//GEN-LAST:event_chkDeltaCursorActionPerformed

    private void txtLocationKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLocationKeyPressed
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER)
            btnAddLocationActionPerformed(null);
    }//GEN-LAST:event_txtLocationKeyPressed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        busMon.clear();
        for(int i = 0; i < canvas.getTimingDiagram().getNumberOfSignals(); i++)
            canvas.getTimingDiagram().removeSignal(0);

        canvas.repaint();
    }//GEN-LAST:event_btnClearActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddLocation;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCursorToEnd;
    private javax.swing.JButton btnCursorToStart;
    private javax.swing.JButton btnShiftLeft;
    private javax.swing.JButton btnShiftRight;
    private javax.swing.JButton btnSimEndCopy;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnZoomIn;
    private javax.swing.JButton btnZoomOut;
    private javax.swing.JPanel canvasContainer;
    private javax.swing.JCheckBox chkDeltaCursor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtEnd;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtStart;
    // End of variables declaration//GEN-END:variables

}
